<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wonnabe.asset.mapper.SummariesCacheMapper">

    <!-- 이번 달 총 소비금액 (메인 페이지 전용) -->
    <select id="getMainConsumption" resultType="double">
        SELECT IFNULL(SUM(amount), 0)
        FROM Summaries_Cache
        WHERE period_type = 'monthly'
          AND yearMonth = #{yearMonth}
          AND user_id = #{userId}
    </select>

    <!-- 지난 달 총 소비금액 (메인 페이지 전용) -->
    <select id="getMainConsumptionLastMonth" resultType="double">
        SELECT IFNULL(SUM(amount), 0)
        FROM Summaries_Cache
        WHERE period_type = 'monthly'
          AND yearMonth = #{yearMonth}
          AND user_id = #{userId}
    </select>

    <!-- 월별 총 소비금액 -->
    <select id="getMonthlyTotalConsumption" resultType="double">
        SELECT IFNULL(SUM(amount), 0)
        FROM Summaries_Cache
        WHERE period_type = 'monthly'
          AND yearMonth = #{yearMonth}
          AND user_id = #{userId}
    </select>

    <!-- 카테고리별 월별 소비 합계 -->
    <!-- DTO 별칭 사용 (RootConfig의 typeAliasesPackage 설정 덕분에 FQN 제거) -->
    <select id="getMonthlyCategorySummary" parameterType="map" resultType="CategorySummaryDTO">
        SELECT
            curr.consumption_category AS consumptionCategory,
            IFNULL(SUM(curr.amount), 0) AS amount,
            (IFNULL(SUM(curr.amount), 0) - IFNULL(SUM(prev.amount), 0)) AS diffFromLastMonth
        FROM Summaries_Cache curr
                 LEFT JOIN Summaries_Cache prev
                           ON prev.consumption_category = curr.consumption_category
                               AND prev.period_type = 'monthly'
                               AND prev.user_id = curr.user_id
                               AND prev.yearMonth = DATE_FORMAT(DATE_SUB(CONCAT(#{yearMonth}, '-01'), INTERVAL 1 MONTH), '%Y-%m')
        WHERE curr.period_type = 'monthly'
          AND curr.yearMonth = #{yearMonth}
          AND curr.user_id = #{userId}
        GROUP BY curr.consumption_category
    </select>

    <!-- 최근 N개월(시작~끝)의 월별 합계 평균 -->
    <select id="getAvgMonthlyConsumption" resultType="double">
        SELECT AVG(month_total) AS estimatedMonthlyConsumption
        FROM (
                 SELECT yearMonth, SUM(amount) AS month_total
                 FROM summaries_cache
                 WHERE user_id = #{userId}
                   AND period_type = 'monthly'
                 GROUP BY yearMonth
                 ORDER BY yearMonth DESC
                     LIMIT 6
             ) t;

    </select>

    <!-- 해당 월의 카테고리별 실제 금액 -->
    <select id="getCategoryAmountsByMonth" resultType="map">
        SELECT
            consumption_category AS category,
            SUM(amount)          AS amount
        FROM summaries_cache
        WHERE user_id = #{userId}
          AND period_type = 'monthly'
          AND yearMonth = #{yearMonth}
        GROUP BY consumption_category
    </select>

    <!-- 기간 내 월별 카테고리 합을 만든 뒤, 카테고리별 평균 -->
    <select id="getCategoryAvgInRange" resultType="map">
        SELECT
            category,
            AVG(month_amount) AS avgAmount
        FROM (
                 SELECT
                     consumption_category AS category,
                     yearMonth,
                     SUM(amount) AS month_amount
                 FROM summaries_cache
                 WHERE user_id = #{userId}
                   AND period_type = 'monthly'
                   AND yearMonth BETWEEN #{startYm} AND #{endYm}
                 GROUP BY consumption_category, yearMonth
             ) t
        GROUP BY category
    </select>


    <!-- 오늘의 소비 -->
    <select id="getTodayConsumption" resultType="double">
        SELECT IFNULL(SUM(amount), 0)
        FROM Summaries_Cache
        WHERE period_type = 'daily'
          AND date = #{today}
          AND user_id = #{userId}
    </select>

    <!-- 소비분석 페이지 - 오늘의 소비 카테고리별 비율 -->
    <select id="getDailyCategorySummary" parameterType="map" resultType="CategorySummaryDTO">
        SELECT
            consumption_category AS consumptionCategory,
            SUM(amount) AS amount
        FROM Summaries_Cache
        WHERE period_type = 'daily'
          AND date = #{date}
          AND user_id = #{userId}
        GROUP BY consumption_category
    </select>

</mapper>
