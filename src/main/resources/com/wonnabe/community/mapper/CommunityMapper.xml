<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wonnabe.community.mapper.CommunityMapper">

    <!-- 게시판 전체 조회 -->
    <select id="selectAllCommunities" resultType="CommunityDTO">
        SELECT
            c.id AS communityId,
            c.name AS communityName,
            c.simple_description AS simpleDescription,
            (
                SELECT COUNT(*)
                FROM user_info u
                WHERE u.nowme_id = c.id
            ) AS memberCount,
            (
                SELECT b.title
                FROM board b
                WHERE b.financial_tendency_type_id = c.id
                  AND b.is_deleted = 0
                ORDER BY b.created_at DESC
                LIMIT 1
            ) AS latestBoard
        FROM financial_tendency_type c
    </select>


    <!-- 게시판 인기 Top3 -->
    <select id="selectTop3Communities" resultType="CommunityDTO">
        SELECT
            c.id AS communityId,
            c.name AS communityName,
            c.simple_description AS simpleDescription,
            (
                SELECT COUNT(*)
                FROM user_info ui
                WHERE ui.nowme_id = c.id
            ) AS memberCount,
            (
                SELECT title
                FROM board
                WHERE financial_tendency_type_id = c.id AND is_deleted = 0
                ORDER BY created_at DESC
                LIMIT 1
            ) AS latestBoard
        FROM financial_tendency_type c
        ORDER BY memberCount DESC
            LIMIT 3
    </select>

    <!-- 인기 게시글 Top3 -->
    <select id="selectTop3Boards" resultType="BoardDTO">
        SELECT *
        FROM (
                 SELECT
                     b.id AS boardId,
                     b.title,
                     b.content,
                     u.name AS userName,
                     f.id AS categoryId,
                     f.name AS categoryName,
                     (SELECT COUNT(*) FROM board_like WHERE board_id = b.id AND is_deleted = 0) AS likeCount,
                     (SELECT COUNT(*) FROM comment WHERE post_id = b.id AND is_deleted = 0) AS commentCount,
                     CASE
                         WHEN EXISTS (
                             SELECT 1 FROM board_scrap
                             WHERE board_id = b.id AND user_id = #{userId} AND is_deleted = 0
                         ) THEN TRUE ELSE FALSE
                         END AS scraped,
                     CASE
                         WHEN EXISTS (
                             SELECT 1 FROM board_like
                             WHERE board_id = b.id AND user_id = #{userId} AND is_deleted = 0
                         ) THEN TRUE ELSE FALSE
                         END AS liked,
                     DATE_FORMAT(b.created_at, '%Y-%m-%d %H:%i:%s') AS createdAt
                 FROM board b
                          JOIN user_profile u ON b.user_id = u.user_id
                          JOIN financial_tendency_type f ON b.financial_tendency_type_id = f.id
                 WHERE b.is_deleted = 0
             ) AS sub
        ORDER BY likeCount DESC
            LIMIT 3
    </select>


    <!-- 내가 작성한 게시글 수 -->
    <select id="countUserBoards" resultType="int">
        SELECT COUNT(*) FROM board WHERE user_id = #{userId} AND is_deleted = 0
    </select>

    <!-- 내가 스크랩한 글 수 -->
    <select id="countUserScraps" resultType="int">
        SELECT COUNT(*) FROM board_scrap
        WHERE user_id = #{userId} AND is_deleted = 0
    </select>

    <!-- 사용자가 스크랩한 게시글 조회 -->
    <select id="selectScrapedBoards" resultType="BoardDTO">
        SELECT
            b.id AS boardId,
            b.title,
            b.content,
            u.name AS userName,
            f.id AS categoryId,
            f.name AS categoryName,
            (SELECT COUNT(*) FROM board_like WHERE board_id = b.id AND is_deleted = 0) AS likeCount,
            (SELECT COUNT(*) FROM comment WHERE post_id = b.id AND is_deleted = 0) AS commentCount,

            CASE
                WHEN bs.is_deleted = 0 THEN TRUE ELSE FALSE
                END AS scraped,

            CASE
                WHEN EXISTS (
                    SELECT 1 FROM board_like bl
                    WHERE bl.board_id = b.id
                      AND bl.user_id = #{userId}
                      AND bl.is_deleted = 0
                ) THEN TRUE ELSE FALSE
                END AS liked,

            DATE_FORMAT(b.created_at, '%Y-%m-%d %H:%i:%s') AS createdAt

        FROM board_scrap bs
                 JOIN board b ON bs.board_id = b.id
                 JOIN user_profile u ON b.user_id = u.user_id
                 JOIN financial_tendency_type f ON b.financial_tendency_type_id = f.id
        WHERE bs.user_id = #{userId}
          AND bs.is_deleted = 0
          AND b.is_deleted = 0
        ORDER BY b.created_at DESC
    </select>

    <!-- 사용자가 작성한 글 목록 조회 -->
    <select id="selectWrittenBoards" resultType="BoardDTO">
        SELECT
            b.id AS boardId,
            b.title,
            b.content,
            u.name AS userName,
            f.id AS categoryId,
            f.name AS categoryName,
            (SELECT COUNT(*) FROM board_like WHERE board_id = b.id AND is_deleted = 0) AS likeCount,
            (SELECT COUNT(*) FROM comment WHERE post_id = b.id AND is_deleted = 0) AS commentCount,

            CASE
                WHEN EXISTS (
                    SELECT 1 FROM board_scrap
                    WHERE board_id = b.id AND user_id = #{userId} AND is_deleted = 0
                ) THEN TRUE ELSE FALSE
                END AS scraped,

            CASE
                WHEN EXISTS (
                    SELECT 1 FROM board_like
                    WHERE board_id = b.id AND user_id = #{userId} AND is_deleted = 0
                ) THEN TRUE ELSE FALSE
                END AS liked,

            DATE_FORMAT(b.created_at, '%Y-%m-%d %H:%i:%s') AS createdAt

        FROM board b
                 JOIN user_profile u ON b.user_id = u.user_id
                 JOIN financial_tendency_type f ON b.financial_tendency_type_id = f.id
        WHERE b.user_id = #{userId} AND b.is_deleted = 0
        ORDER BY b.created_at DESC
    </select>




</mapper>
