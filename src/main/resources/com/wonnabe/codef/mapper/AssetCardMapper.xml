<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wonnabe.codef.mapper.AssetCardMapper">

    <insert id="upsert" parameterType="com.wonnabe.codef.domain.UserCard">
        INSERT INTO User_card (
            user_id,
            product_id,
            monthly_usage,
            issue_date,
            expiry_date,
            performance_condition,
            card_number,
            account_id
        )
        VALUES (
                   #{userId},
                   #{productId},
                   0.00,
                   #{issueDate},
                   #{validPeriod},
                   NULL,
                   #{cardNumber},
                   #{accountId}
               )
        ON DUPLICATE KEY UPDATE
                             issue_date = VALUES(issue_date),
                             expiry_date = VALUES(expiry_date),
                             card_number = VALUES(card_number),
                             account_id = VALUES(account_id)
    </insert>

    <select id="findProductIdByKeyword2" parameterType="String" resultType="long">
        SELECT product_id
        FROM Card_product
        WHERE #{cardName} LIKE CONCAT('%', REPLACE(card_name, ' ', ''), '%')
        LIMIT 1
    </select>

    <select id="findProductIdByKeyword" parameterType="map" resultType="long">
        SELECT p.product_id
        FROM Card_product p
                 JOIN Institutions i ON p.card_company = i.name
        WHERE i.code = #{institutionCode}
          AND REPLACE(#{cardName}, ' ', '') LIKE CONCAT('%', REPLACE(p.card_name, ' ', ''), '%')
        LIMIT 1;
    </select>

    <select id="findUserCardIdByKeyword" parameterType="map" resultType="long">
        SELECT uc.id
        FROM Card_product p
                 JOIN Institutions i ON p.card_company = i.name
                 JOIN User_card uc ON uc.product_id = p.product_id AND uc.user_id = #{userId}
        WHERE i.code = #{institutionCode}
          AND REPLACE(#{cardName}, ' ', '') LIKE CONCAT('%', REPLACE(p.card_name, ' ', ''), '%')
        LIMIT 1
    </select>

    <insert id="upsertBatch" parameterType="java.util.List">
        INSERT INTO Card_Transactions (
        user_id,
        card_id,
        transaction_date,
        transaction_time,
        card_number,
        card_name,
        merchant_name,
        merchant_corp_no,
        merchant_store_no,
        merchant_store_type,
        merchant_category,
        amount
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.userId},
            #{item.cardId},
            #{item.transactionDate},
            #{item.transactionTime},
            #{item.cardNumber},
            #{item.cardName},
            #{item.merchantName},
            #{item.merchantCorpNo},
            #{item.merchantStoreNo},
            #{item.merchantStoreType},
            #{item.merchantCategory},
            #{item.amount}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        card_number     = VALUES(card_number),
        merchant_name = VALUES(merchant_name),
        merchant_category = VALUES(merchant_category),
        merchant_corp_no = VALUES(merchant_corp_no),
        merchant_store_no = VALUES(merchant_store_no),
        amount = VALUES(amount)
    </insert>

    <select id="findUserCardIdByTwoCardNumbers"
            parameterType="map"
            resultType="long">
        SELECT id
        FROM User_card
        WHERE user_id = #{userId}
          AND (
            RIGHT(card_number, 4) = RIGHT(#{cardNumber1}, 4)
                OR RIGHT(card_number, 4) = RIGHT(#{cardNumber2}, 4)
            )
        ORDER BY issue_date DESC
        LIMIT 1
    </select>

</mapper>
