plugins {
    id 'java'
    id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30'
    springSecurityVersion='5.8.13'
}

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // 스프링
    implementation ("org.springframework:spring-context:${springVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging' // SLF4J로 교체
    }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-test:${springVersion}"

    // AOP
    implementation 'org.aspectj:aspectjrt:1.9.20'
    implementation 'org.aspectj:aspectjweaver:1.9.20'

    // JSP, SERVLET, JSTL
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
    implementation 'javax.servlet:jstl:1.2'

    // SLF4J + Log4J2 구성 (SLF4J 1.7.x 기반)
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0' // SLF4J → Log4J2

    // log4jdbc (SQL 로그)
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

    // XML 한글 처리
    implementation 'xerces:xercesImpl:2.12.2'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    // 테스트
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // DB + MyBatis
    implementation 'com.mysql:mysql-connector-j:8.1.0'
    implementation 'com.zaxxer:HikariCP:2.7.4'
    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'

    // Swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // 보안
    implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")

    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Spring Data Redis
    implementation 'org.springframework.data:spring-data-redis:2.7.5'
    // Redis 클라이언트 (Lettuce 사용)
    implementation 'io.lettuce:lettuce-core:6.1.5.RELEASE'
    // Jackson (value serializer용, 이미 있을 수도 있음)
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.5'
    // (선택) String serializer
    implementation 'org.springframework:spring-context-support:5.3.23'

    // JSON 자바 변환을 위한 의존성
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'

    implementation 'io.projectreactor:reactor-core:3.5.10'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'


}

test {
    useJUnitPlatform()
}

war {
    webXml = null
}
